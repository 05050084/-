#include<LedControl.h>
#include<CapacitiveSensor.h>
#include <Ultrasonic.h>
//觸碰
CapacitiveSensor cs_7_8 =CapacitiveSensor(A0,A1);
//CapacitiveSensor cs_7_9 =CapacitiveSensor(7,9);

Ultrasonic ultrasonic(A4,A5); // (Trig PIN,Echo PIN)

#define DIN 2
#define CS 3
#define CLK 4
int touch =1;
int runn=0;

#define PinMotor1 6
#define PinMotor2 5
#define PinMotor3 10
#define PinMotor4 11

void cry();
void caninetooth();
void strolls();
void tongues();
void os();
void smiles();
void song();

//音樂
#define NOTE_G0 -1
#define NOTE_G1 393
#define NOTE_G2 441
#define NOTE_G3 495
#define NOTE_G4 556
#define NOTE_G5 624
#define NOTE_G6 661
#define NOTE_G7 742
#define NOTE_GL1 196
#define NOTE_GL2 221
#define NOTE_GL3 234
#define NOTE_GL4 262
#define NOTE_GL5 294
#define NOTE_GL6 330
#define NOTE_GL7 371
#define NOTE_GH1 786
#define NOTE_GH2 882
#define NOTE_GH3 990
#define NOTE_GH4 1049
#define NOTE_GH5 1178
#define NOTE_GH6 1322
#define NOTE_GH7 1484

#define WHOLE 1
#define HALF 0.5
#define QUARTER 0.25
#define EIGHTH 0.25
#define SIXTEENTH 0.625

int tune[]=
{
NOTE_G6,NOTE_GH1,NOTE_G7,NOTE_G6,NOTE_G5,NOTE_G6,NOTE_G3,NOTE_G6,
NOTE_G5,NOTE_G6,NOTE_GH1,NOTE_G7,NOTE_GH1,NOTE_G7,NOTE_G6,NOTE_G7,
NOTE_GH1,NOTE_GH1,NOTE_GH2,NOTE_GH3,NOTE_GH3,NOTE_GH3,NOTE_GH3,NOTE_GH2,
NOTE_GH1,NOTE_G7,NOTE_G6,NOTE_G7,NOTE_G5,
NOTE_G6,NOTE_GH1,NOTE_G7,NOTE_G6,NOTE_G5,NOTE_G6,NOTE_G0,NOTE_G0,NOTE_G0,NOTE_G0,NOTE_G0

};//?部分就是整首曲子的音符部分，用了一?序列定??tune，整?

float duration[]=
{
1+0.5,0.5+0.5,0.5,0.5,0.5,0.5,1+1+1,0.5,0.5,1+0.5,0.5,0.5,0.25,0.25,0.5,0.5,1+1+1,0.5,0.5,
0.5,0.5,0.5,0.5,1+1,0.5,0.5,0.5,0.5,1+1,1,1,1,0.5,0.5,1+1+1,1,1,1,1,1,
};

int length;//?里定?一??量，后面用?表示共有多少?音符
int tonePin=8;


LedControl lc = LedControl(DIN,CLK,CS,2);
long randNumber;
byte smile[16]={
  //哭臉
  //左 0
    B00000000,
    B00000000,
    B00000000,
    B00000011,
    B00000111,
    B00001100,
    B00001000,
    B00000000,
  //1 //右 //上下顛倒  左右相反
    B00000000,
    B00001000,
    B00001100,
    B00000111,
    B00000011,
    B00000000,
    B00000000,
    B00000000,
};
byte sad[16]={
  //笑臉 
  //左 0
    B00000000,
    B00000000,
    B00001000,
    B00001100,
    B00000111,
    B00000011,
    B00000000,
    B00000000,
    //右 //1  //上下顛倒  左右相反
    B00000000,
    B00000000,
    B00000011,
    B00000111,
    B00001100,
    B00001000,
    B00000000,
    B00000000,
};
byte tongue[16]={
  //吐舌頭
  //左 0
    B00000000,
    B00000000,
    B01111111,
    B00000100,
    B00001000,
    B00010001,
    B00100010,
    B01111111,

     //右 //1 //上下顛倒  左右相反
    B00000011,
    B00000100,
    B00001000,
    B00010001,
    B00100010,
    B11111111,
    B00000000,
    B00000000,
};
byte o[16]={
  //O嘴
  //左0 
    B00000000,
    B00000000,
    B00000011,
    B00000100,
    B00000100,
    B00000100,
    B00000011,
    B00000000,

     //右 //1 //上下顛倒 左右相反
    B00000000,
    B00000011,
    B00000100,
    B00000100,
    B00000100,
    B00000011,
    B00000000,
    B00000000,
};
byte mm[16]={
  //W嘴
  //左0 
    B00000000,
    B00000000,
    B00000000,
    B00010000,
    B00100001,
    B00100010,
    B00011100,
    B00000000,

     //右 //1 //上下顛倒 左右相反
    B00000000,
    B00011100,
    B00100010,
    B00100001,
    B00010000,
    B00000000,
    B00000000,
    B00000000,
};
byte v[16]={
  //B嘴
  //左0 
    B00000000,
    B00000000,
    B00000001,
    B00000000,
    B00000001,
    B00000000,
    B00000001,
    B00000000,

     //右 //1 //上下顛倒 左右相反
    B00011111,
    B00100000,
    B00011111,
    B00000001,
    B00011111,
    B00100000,
    B00011111,
    B00000000,
};




byte stroll[32]={
  //走路
  //左 //0
    B00111000,
    B00111000,
    B00010000,
    B00111000,
    B01010100,
    B00010000,
    B00101000,
    B01000100,
    //2
    B00111000,
    B00111000,
    B00010000,
    B00111000,
    B01011000,
    B00010000,
    B00101000,
    B00100100,
    //3
    B00111000,
    B00111000,
    B00010000,
    B00111000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    //4
    B00111000,
    B00111000,
    B00010000,
    B00111000,
    B00110100,
    B00010000,
    B00101000,
    B01001000,
};
byte walk[32]={
  //走路
  //右  //0 //上下顛倒
    B01000100,
    B00101000,
    B00010000,
    B01010100,
    B00111000,
    B00010000,
    B00111000,
    B00111000,
    //2
    B01001000,
    B00101000,
    B00010000,
    B01011000,
    B00111000,
    B00010000,
    B00111000,
    B00111000,
    //3
    B00010000,
    B00010000,
    B00010000,
    B01010100,
    B00111000,
    B00010000,
    B00111000,
    B00111000,
    //4
    B00101000,
    B00101000,
    B00010000,
    B00110100,
    B00111000,
    B00010000,
    B00111000,
    B00111000,
};



void setup() 
{
cs_7_8.set_CS_AutocaL_Millis(0xFFFFFFF);
//cs_7_9.set_CS_AutocaL_Millis(0xFFFFFFF);
  
  Serial.begin(9600);
 randomSeed(analogRead(0));
  //設定正常運作模式
 lc.shutdown(0,false);
  lc.shutdown(1,false);
 //亮度
lc.setIntensity(0,1);
lc.setIntensity(1,1);
 //清除DSP
 lc.clearDisplay(0);
 lc.clearDisplay(1);
 pinMode(PinMotor1, OUTPUT);
    pinMode(PinMotor2, OUTPUT);
    pinMode(PinMotor3, OUTPUT);
    pinMode(PinMotor4, OUTPUT);
  //音樂
pinMode(tonePin,OUTPUT);//?置蜂?器的pin??出模式
length = sizeof(tune)/sizeof(tune[0]);//?里用了一?sizeof函?，可以查出tone序列里有多少?音符

}

void loop()
{
//觸碰

long start=millis();
//Serial.println(total);
/////////////////////////////
/*if(ultrasonic.Ranging(CM)<=12)
{
  runn=1;
}
if(runn==1)
{
/////////////////////////////

 // song();//音樂
   /////////////////////////

/////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
 analogWrite(PinMotor1,120);
    analogWrite(PinMotor2,0);
    analogWrite(PinMotor3,120);
    analogWrite(PinMotor4,0);
    Serial.print(ultrasonic.Ranging(CM)); // CM or INC
  Serial.println(" cm" );
  delay(100);
}*/
analogWrite(PinMotor1,250);
    analogWrite(PinMotor2,200);
    analogWrite(PinMotor3,250);
    analogWrite(PinMotor4,200);
    Serial.print(ultrasonic.Ranging(CM)); // CM or INC
  Serial.println(" cm" );
  delay(100);
}
///////////////////////////////////////////////////////////////////////////////////////////////////
void smiles()
{
    for(int i =0;i<=8;i++)
    {
      lc.setColumn(1,7-i,smile[i+8]);
      lc.setColumn(0,7-i,smile[i]);
    }
    delay(1000);
}
void os()
{
    for(int i =0;i<=8;i++)
    {
      lc.setColumn(1,7-i,o[i+8]);
      lc.setColumn(0,7-i,o[i]);
    }
    delay(1000);
}
void caninetooth()
{
   for(int i =0;i<=8;i++)
   {
      lc.setColumn(1,7-i,mm[i+8]);
      lc.setColumn(0,7-i,mm[i]);
   }
   delay(1000);
}

void tongues()
{
     for(int i =0;i<=8;i++)
     {
         lc.setColumn(1,7-i,tongue[i+8]);
         lc.setColumn(0,7-i,tongue[i]);
     }
     delay(1000);
}
void cry()
{
    for(int i =0;i<=8;i++)
    {
        lc.setColumn(1,7-i,sad[i+8]);
        lc.setColumn(0,7-i,sad[i]);
    }
    delay(1000);
}
void strolls()
{
   for(int i =0;i<=8;i++)
   {
      lc.setColumn(1,7-i,walk[i]);
      lc.setColumn(0,7-i,stroll[i]);
   }
   delay(50);
  for(int i =0;i<=8;i++)
  {
      lc.setColumn(1,7-i,walk[i+8]);
      lc.setColumn(0,7-i,stroll[i+8]);
  }
  delay(50); 
  for(int i =0;i<=8;i++)
  {
      lc.setColumn(1,7-i,walk[i+16]);
      lc.setColumn(0,7-i,stroll[i+16]);
  }
  delay(50);
  for(int i =0;i<=8;i++)
  {
     lc.setColumn(1,7-i,walk[i+24]);
     lc.setColumn(0,7-i,stroll[i+24]);
  }
  
}
void song()
{
  for(int x=0;x<length;x++)//循?音符的次?
 {
tone(tonePin,tune[x]);//此函?依次播放tune序列里的??，即每?音符
  strolls();//走路
delay(100*duration[x]);//每?音符持?的??，即?拍duration，400是?整??的越大，曲子速度越慢，越小曲子速度越快，自己掌握吧
noTone(tonePin);//停止?前音符，?入下一音符
//觸碰
long total=cs_7_8.capacitiveSensor(50);
if(total>3000)
{
  touch++;
  delay(250);

if(touch==6)
 {
  touch=1;
 }
/*randNumber=random(10);
Serial.println(randNumber);//隨機變數*/
if(touch==3)
{
     cry();//哭臉
}
else if(touch==1)
 {
     smiles();//笑臉
 }
else if(touch==2)
 {
     tongues(); //舌頭
 }
else if(touch==4)
{
     os();//哭臉
}
else if(touch==5)
{
     caninetooth();   //尖牙
}
///////////////////////////////////////////////////////////
/* else if(touch==6)
 {
   os();//舌頭
}*/
}
}

}
